name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up C++ environment on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build python3-pip

      - name: Set up C++ environment on macOS
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake ninja python3

      - name: Set up Python 3.10 on Windows
        if: runner.os == 'Windows'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Configure CMake with MSBuild (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir build
          cd build
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
        shell: cmd

      - name: Configure CMake with Ninja (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir build
          cd build
          cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=Release

      - name: Build with MSBuild (Windows)
        if: runner.os == 'Windows'
        run: cmake --build build --config Release --parallel
        shell: cmd

      - name: Build with Ninja (Linux/macOS)
        if: runner.os != 'Windows'
        run: cmake --build build --parallel

      - name: Install Python spz package on macOS using a virtual environment
        if: runner.os == 'macOS'
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install .

      - name: Install Python spz package on Linux/Windows using pip
        if: runner.os != 'macOS'
        run: pip3 install .
